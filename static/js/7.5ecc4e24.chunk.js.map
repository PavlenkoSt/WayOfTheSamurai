{"version":3,"sources":["Components/common/FormsControls/FormsControls.jsx","Components/common/FormsControls/FormsControls.module.css","utilts/validators/validators.js","Components/Login/LoginForm/LoginForm.module.css","Components/Login/LoginForm/LoginForm.jsx","Components/Login/Login.jsx"],"names":["FormControl","input","meta","props","child","hasError","error","touched","className","s","formControls","children","errorMessage","Textarea","restProps","Input","FieldCreator","style","component","validate","placeholder","name","type","text","module","exports","required","value","maxLengthCreator","maxLength","length","reduxForm","form","onSubmit","handleSubmit","checkbox","formControl","errorForm","btn","connect","state","isAuth","auth","login","to","formData","password","save"],"mappings":"4RAGMA,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAClDC,EAAWH,EAAKI,OAASJ,EAAKK,QACpC,OACE,sBAAKC,UAAWC,IAAEC,aAAe,KAAOL,GAAYI,IAAEH,OAAtD,UACE,8BACGH,EAAMQ,WAEP,sBAAMH,UAAWC,IAAEG,aAAnB,SAAmCP,GAAYH,EAAKI,YAK/CO,EAAW,SAAAV,GAAU,IACzBF,EAAoCE,EAApCF,MAAuBa,GAAaX,EAA7BD,KAA6BC,EAAvBC,MADW,YACYD,EADZ,2BAE/B,OACE,cAACH,EAAD,2BAAiBG,GAAjB,aACE,oDACMF,GACAa,QAMCC,EAAQ,SAAAZ,GAAU,IACtBF,EAA6BE,EAA7BF,MAAgBa,GAAaX,EAAtBD,KADc,YACQC,EADR,mBAE5B,OACE,cAACH,EAAD,2BAAiBG,GAAjB,aACE,iDACMF,GACAa,QAMCE,EAAe,SAACC,EAAOC,EAAWC,EAAUC,EAAaC,GAAkC,IAA5BC,EAA2B,uDAApB,OAAQC,EAAY,uDAAP,GAC9F,OACE,kCACE,cAAC,IAAD,CACEf,UAAWS,EACXC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,KAAMA,EACNC,KAAMA,IAPV,IAQMC,O,oBChDVC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,aAAe,oCAAoC,UAAY,mC,iCCDzK,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,uNAGEC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,MAAM,4LAAN,OAA6CA,EAA7C,Q,oBCLlCL,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,SAAW,4BAA4B,IAAM,yB,kHCwBhHM,cAAU,CAAEC,KAAM,SAAlBD,EAlBG,SAAA5B,GACd,OACI,uBAAMK,UAAWC,IAAEuB,KAAMC,SAAU9B,EAAM+B,aAAzC,UACMlB,YAAaP,IAAER,MAAOc,IAAOW,IAAU,iCAAS,SAChDV,YAAaP,IAAER,MAAOc,IAAOW,IAAU,uCAAU,WAAY,YAC7DV,YAAaP,IAAE0B,SAAU,QAAS,KAAM,KAAM,OAAQ,WAAY,mFACnEhC,EAAMG,OACH,qBAAKE,UAAY4B,IAAYC,UAA7B,SACKlC,EAAMG,QAGf,8BACI,wBAAQE,UAAWC,IAAE6B,IAAKhB,KAAK,SAA/B,oD,uBCMDiB,uBAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EAnBD,SAAApC,GAIV,OAAGA,EAAMsC,OACE,cAAC,IAAD,CAAUG,GAAG,aAGpB,gCACI,0DACA,cAAC,EAAD,CAAWX,SATF,SAAAY,GACb1C,EAAMwC,MAAME,EAASF,MAAOE,EAASC,SAAUD,EAASE","file":"static/js/7.5ecc4e24.chunk.js","sourcesContent":["import { Field } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div className={s.formControls + ' ' + (hasError && s.error)}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      { <span className={s.errorMessage}>{ hasError && meta.error }</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea \r\n        {...input}\r\n        {...restProps}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const {input, meta, ...restProps} = props\r\n  return (\r\n    <FormControl {...props}>\r\n      <input \r\n        {...input}\r\n        {...restProps}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const FieldCreator = (style, component, validate, placeholder, name, type = 'text', text='') => {\r\n  return (\r\n    <label>\r\n      <Field\r\n        className={style}\r\n        component={component}\r\n        validate={validate}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        type={type}\r\n      /> {text}\r\n    </label>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__2q6QF\",\"error\":\"FormsControls_error__2brMB\",\"errorMessage\":\"FormsControls_errorMessage__30eYp\",\"errorForm\":\"FormsControls_errorForm__3ALOI\"};","export const required = value => {\r\n    if(value) return undefined\r\n    return 'Это поле не может быть отправлено пустым!'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if( value.length > maxLength) return `Максимальное количество символов - ${maxLength}!`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1uSwd\",\"input\":\"LoginForm_input__3phZS\",\"checkbox\":\"LoginForm_checkbox__3KddZ\",\"btn\":\"LoginForm_btn__1YC2l\"};","import { Field, reduxForm } from \"redux-form\"\r\nimport { Input } from \"../../common/FormsControls/FormsControls\"\r\nimport s from './LoginForm.module.css'\r\nimport { required } from '../../../utilts/validators/validators'\r\nimport formControl from '../../common/FormsControls/FormsControls.module.css'\r\nimport { FieldCreator } from '../../common/FormsControls/FormsControls'\r\n\r\nconst LoginForm = props => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            { FieldCreator(s.input, Input, required, 'Логин', 'login') }\r\n            { FieldCreator(s.input, Input, required, 'Пароль', 'password', 'password') }\r\n            { FieldCreator(s.checkbox, 'input', null, null, 'save', 'checkbox', 'запомнить меня') }\r\n            {props.error && (\r\n                <div className={ formControl.errorForm }>\r\n                    {props.error}\r\n                </div>\r\n            )}\r\n            <div>\r\n                <button className={s.btn} type='submit'>Войти</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'login' })(LoginForm)","import LoginForm from \"./LoginForm/LoginForm\"\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../Redux/authReducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => {\r\n        props.login(formData.login, formData.password, formData.save)\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Вход</h2>\r\n            <LoginForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login } )(Login)"],"sourceRoot":""}